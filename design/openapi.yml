---
openapi: 3.0.3
info:
  version: '2021-04-15'
  title: 'Oryx News Aggregator'

paths:
  /articles:
    get:
      tags: [Public]
      summary: Returns all recent articles
      description: >-
        Returns all recent articles, ranked and
        paginated
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: string
          description: the max number of items returned
        - in: query
          name: nextToken
          required: false
          schema:
            type: string
          description: the token returned by previous call for pagination
        - in: query
          name: domain
          required: false
          schema:
            type: string
          description: filter articles by domain
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                type: object
                required: [items]
                properties:
                  nextToken:
                    type: string
                    description: the token for querying the next page, if any
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Article'
    post:
      tags: [Registered Users]
      summary: Adds a new article to the list
      description: >-
        Insert the given article to the list
      requestBody:
        $ref: '#/components/requestBodies/Article'
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Article'

  /articles/{articleId}:
    parameters:
      - in: path
        name: articleId
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags: [Public]
      summary: Returns the selected article
      description: >-
        Returns the article with the given id
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Article'
    delete:
      tags: [Registered Users]
      summary: Removes the selected article
      description: >-
        Removes the selected article if the user created it
      responses:
        204:
          description: OK

  /articles/{articleId}/claps:
    parameters:
      - in: path
        name: articleId
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags: [Registered Users]
      summary: Get the claps the user gave to this article
      description: >-
        Returns the number of claps the user gave to the
        specified article.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [id, caller, claps]
                properties:
                  id:
                    type: string
                    format: uuid
                    description: the article claps refer to
                  caller:
                    type: string
                    format: email
                    description: the user making the call
                  claps:
                    type: integer
                    minimum: 0
                    description: >-
                      The number of claps the user gave to the article,
                      zero if not called yet
                  date:
                    type: string
                    format: date-time
                    description: >-
                      The last time claps where modified by this user
    put:
      tags: [Registered Users]
      summary: Set the claps of the caller for an article
      description: >-
        Set the claps from the user for the chosen article.
        To remove all claps, simply send "claps": 0
      requestBody:
        description: The number of claps the user gives to the article
        content:
          application/json:
            schema:
              type: object
              properties:
                claps:
                  type: integer
                  minimum: 0
                  maximum: 100
      responses:
        201:
          $ref: '#/components/responses/PutClaps'
        200:
          $ref: '#/components/responses/PutClaps'
        404:
          description: Article not found

  /articles/{articleId}/pings:
    parameters:
      - in: path
        name: articleId
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags: [Public, Internal]
      summary: Receives HTML a ping calls
      description: >-
        This endpoint is meant to be used in the "ping" attribute
        of the "a" tag driving the user to the article. Like:
        "<a href="<articleLink>" ping=".../articles/{articleId}/pings>"
        to track clicks to the articles
      responses:
        204:
          description: OK

components:
  schemas:
    Article:
      type: object
      required: [id, link, title, claps, clappers]
      properties:
        id:
          type: string
          format: uuid
        link:
          type: string
          format: uri
        title:
          type: string
        referrer:
          type: string
          example: t.panozzo
          description: who linked the article
        date:
          type: string
          format: date-time
          description: >-
            the date the article was submitted ISO8601 (RFC3339)
        tags:
          type: array
          items:
            type: string
          example: [devops, docker]
        domain:
          type: string
          example: labmiriade.it
        claps:
          type: integer
          minimum: 0
        clappers:
          type: integer
          minimum: 0
        views:
          type: integer
          minimum: 0
  requestBodies:
    Article:
      description: A new Article
      content:
        application/json:
          schema:
            type: object
            required: [link]
            properties:
              link:
                type: string
                pattern: 'https?://[-a-zA-Z0-9@:%._+~#=]{1,256}.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?/&=]*)'
  responses:
    PutClaps:
      description: The response to a PUT claps request
      content:
        application/json:
          schema:
            type: object
            properties:
              caller:
                type: string
                format: email
              claps:
                type: integer
                minimum: 0
